* User stories
** DONE As a user i want to launch pyscium from the command-line
- [X] implement command to exit the editor

** DONE As a user i want to create a new file whose name is passed as an arg
- [X] implement file argument 
- [X] flush contents of the DS to file when saved

** DONE As a user i want to make modifications to an existing file that is opened
- [X] implement file argument
- [X] implement a DS to store contents of file
- [X] flush contents of the DS to file when saved

** DONE As a user i want switch to minibuffer so that i can enter commands into it
- [X] implement a minibuffer

** DONE As a user i want to type the name of the file in the minibuffer
- [X] implement a feature such that on-save, user is prompted for the filename
  in minibuffer

** DONE As a developer i want to implement command design pattern
- [X] implement command design pattern for quitting the editor
- [X] implement command design pattern for open file
- [X] implement command design pattern for save file
- [X] implement command design pattern for quitting minibuffer operations(ex save file)

** DONE As a developer i want to implement a new data structure to store buffer contents
- [X] implement a new data structure to store buffer contents

** DONE As a user i want to scroll through text
- [X] implement vertical scrolling
- [X] implement horizontal scrolling

** TODO As a developer i want to write unit tests
- [ ] write unit tests

** TODO As a user i want to delete the character under the cursor using C-d command
- [ ] implement the command to delete character under cursor using C-d

** TODO As a user i want to move forwards/backwards one word at a time
- [ ] impelement M-f/M-b commands to  move forward/backward one word at a time

** +TODO Implement the following commands+
- [ ] arrow keys
- [ ] HOME
- [ ] END
- [ ] PgUp
- [ ] PgDown

* Issues
** TODO Resizing is causing the keyboard input to be added to the window

** TODO Clear minibuffer on following commands
- [ ] C-p
- [ ] C-n
- [ ] C-a
- [ ] C-b

** TODO C-e fails for line without \n character

* Misc
** TODO Clean/Refactor code
- [X] imports
- [X] spacing between if elif else blocks
- [X] rename classes & methods
- [X] remove unnecessary classes
- [X] rename __main_window to __internal_window
- [ ] refactor get_logger()
- [ ] create a variable to hold the value of (curses.LINES - 1)
- [ ] rename display_buffer_contents() to update_buffer_contents()
- [ ] change "no changes need to be saved" to "No changes need to be saved"
- [ ] rename _Buffer.get_x_of_last_character_of_line() to _Buffer.get_length_of_line()
- [ ] change logger.info(e) statements to logger.exception(e) where appropriate

** DONE Beep on backspace at start of buffer ie current_line_number equals 0 AND x equals 0
